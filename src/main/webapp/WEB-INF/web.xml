<?xml version="1.0" encoding="UTF-8"?>
<web-app version="2.5" xmlns="http://java.sun.com/xml/ns/javaee" xmlns:web="http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd">
    <filter>
        <filter-name>ObjectifyFilter</filter-name>
        <filter-class>com.googlecode.objectify.ObjectifyFilter</filter-class>
    </filter>
    <filter-mapping>
        <filter-name>ObjectifyFilter</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>
    <filter>
        <filter-name>appstats</filter-name>
        <filter-class>com.google.appengine.tools.appstats.AppstatsFilter</filter-class>
        <init-param>
            <param-name>logMessage</param-name>
            <param-value>Appstats available: /appstats/details?time={ID}</param-value>
        </init-param>
    </filter>
    <filter-mapping>
        <filter-name>appstats</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>
    <servlet>
        <servlet-name>SensorServlet</servlet-name>
        <servlet-class>com.openhouseautomation.devices.SensorServlet</servlet-class>
    </servlet>
    <servlet>
        <servlet-name>ForecastServlet</servlet-name>
        <servlet-class>com.openhouseautomation.display.ForecastServlet</servlet-class>
    </servlet>
    <servlet>
        <servlet-name>ReadingDataSourceServlet</servlet-name>
        <servlet-class>com.openhouseautomation.display.ReadingDataSourceServlet</servlet-class>
    </servlet>
    <servlet>
        <servlet-name>ArchivedReadingDataSourceServlet</servlet-name>
        <servlet-class>com.openhouseautomation.display.ArchivedReadingDataSourceServlet</servlet-class>
    </servlet>
    <servlet>
        <description>Gets the weather forecast for the provided zipcode (either in initialization params or by URL)</description>
        <servlet-name>WeatherForecast</servlet-name>
        <servlet-class>com.openhouseautomation.cron.WeatherForecast</servlet-class>
        <init-param>
            <param-name>zipcode</param-name>
            <param-value>95376</param-value>
        </init-param>
    </servlet>
    <servlet>
        <servlet-name>LCDDisplayServlet</servlet-name>
        <servlet-class>com.openhouseautomation.display.LCDDisplayServlet</servlet-class>
    </servlet>
    <servlet>
        <servlet-name>ControllerServlet</servlet-name>
        <servlet-class>com.openhouseautomation.devices.ControllerServlet</servlet-class>
    </servlet>
    <servlet>
        <servlet-name>TestServlet</servlet-name>
        <servlet-class>com.openhouseautomation.TestServlet</servlet-class>
    </servlet>
    <!-- <servlet>
    <servlet-name>jersey</servlet-name>
    <servlet-class>org.glassfish.jersey.servlet.ServletContainer</servlet-class>
    <init-param>
      <param-name>jersey.config.server.provider.packages</param-name>
      <param-value>com.openhouseautomation.display</param-value>
    </init-param>
    <init-param>
      <param-name>javax.ws.rs.Application</param-name>
      <param-value>com.openhouseautomation.display.DisplaySourceServlet</param-value>
    </init-param>
    <load-on-startup>1</load-on-startup>
  </servlet>
  -->
    <servlet>
        <servlet-name>DisplaySourceServlet</servlet-name>
        <servlet-class>com.openhouseautomation.display.DisplaySourceServlet</servlet-class>
    </servlet>
    <servlet>
        <servlet-name>MailNotification</servlet-name>
        <servlet-class>com.openhouseautomation.MailNotification</servlet-class>
    </servlet>
    <servlet>
        <servlet-name>IncomingMailHandlerServlet</servlet-name>
        <servlet-class>com.openhouseautomation.IncomingMailHandlerServlet</servlet-class>
    </servlet>
    <servlet>
        <servlet-name>ListenServlet</servlet-name>
        <servlet-class>com.openhouseautomation.ListenServlet</servlet-class>
    </servlet>
    <servlet-mapping>
        <servlet-name>WeatherForecast</servlet-name>
        <url-pattern>/cron/getforecast</url-pattern>
    </servlet-mapping>
    <servlet>
        <servlet-name>DatastoreLogTruncator</servlet-name>
        <servlet-class>com.openhouseautomation.cron.DatastoreLogTruncator</servlet-class>
        <init-param>
            <param-name>age</param-name>
            <param-value>7</param-value>
        </init-param>
    </servlet>
    <servlet-mapping>
        <servlet-name>DatastoreLogTruncator</servlet-name>
        <url-pattern>/cron/datastorelogtruncator</url-pattern>
    </servlet-mapping>
    <servlet>
        <description>A MapReduce that goes through the log looking for temperatures,
      grabs the highest and lowest temperature for the day and saves them.
      The rest of the values are deleted.  This saves datastore space and cost.</description>
        <servlet-name>ReadingServletMR</servlet-name>
        <servlet-class>com.openhouseautomation.mapreduce.ReadingServletMR</servlet-class>
    </servlet>
    <servlet>
        <description>Gives the lat,long coordinates of the IP that called this URL.</description>
        <servlet-name>LocationServlet</servlet-name>
        <servlet-class>com.openhouseautomation.devices.LocationServlet</servlet-class>
    </servlet>
    <servlet-mapping>
        <servlet-name>LocationServlet</servlet-name>
        <url-pattern>/location</url-pattern>
    </servlet-mapping>
    <servlet>
        <description>Returns the time since epoch (Jan 1, 1970) in seconds (not milliseconds!), useful for setting Arduino time.</description>
        <servlet-name>TimeServlet</servlet-name>
        <servlet-class>com.openhouseautomation.devices.TimeServlet</servlet-class>
    </servlet>
    <servlet-mapping>
        <servlet-name>TimeServlet</servlet-name>
        <url-pattern>/gettime</url-pattern>
    </servlet-mapping>
    <servlet>
        <servlet-name>AddSensor</servlet-name>
        <servlet-class>com.openhouseautomation.manage.AddSensorServlet</servlet-class>
    </servlet>
    <servlet-mapping>
        <servlet-name>AddSensor</servlet-name>
        <url-pattern>/addsensor</url-pattern>
    </servlet-mapping>
    <servlet>
        <servlet-name>AddController</servlet-name>
        <servlet-class>com.openhouseautomation.manage.AddControllerServlet</servlet-class>
    </servlet>
    <servlet-mapping>
        <servlet-name>AddController</servlet-name>
        <url-pattern>/addcontroller</url-pattern>
    </servlet-mapping>
    <!-- APPSTATS -->
    <servlet>
        <servlet-name>appstats</servlet-name>
        <servlet-class>com.google.appengine.tools.appstats.AppstatsServlet</servlet-class>
        <init-param>
            <param-name>requireAdminAuthentication</param-name>
            <param-value>true</param-value>
        </init-param>
    </servlet>
    <servlet-mapping>
        <servlet-name>appstats</servlet-name>
        <url-pattern>/appstats/*</url-pattern>
    </servlet-mapping>
    <servlet-mapping>
        <servlet-name>ControllerServlet</servlet-name>
        <url-pattern>/controller/*</url-pattern>
    </servlet-mapping>
    <servlet-mapping>
        <servlet-name>TestServlet</servlet-name>
        <url-pattern>/testservlet/*</url-pattern>
    </servlet-mapping>
    <servlet-mapping>
        <servlet-name>DisplaySourceServlet</servlet-name>
        <url-pattern>/status/*</url-pattern>
        <!-- <url-pattern>/status/display</url-pattern> doesn't work -->
    </servlet-mapping>
    <servlet-mapping>
        <servlet-name>DisplaySourceServlet</servlet-name>
        <url-pattern>/status</url-pattern>
    </servlet-mapping>
    <servlet-mapping>
        <servlet-name>MailNotification</servlet-name>
        <url-pattern>/mail</url-pattern>
    </servlet-mapping>
    <servlet-mapping>
        <servlet-name>IncomingMailHandlerServlet</servlet-name>
        <url-pattern>/_ah/mail/*</url-pattern>
    </servlet-mapping>
    <servlet-mapping>
        <servlet-name>ListenServlet</servlet-name>
        <url-pattern>/listen</url-pattern>
        <url-pattern>/listen/*</url-pattern>
    </servlet-mapping>
    <security-constraint>
        <web-resource-collection>
            <web-resource-name>Admin Only</web-resource-name>
            <url-pattern>/tasks/*</url-pattern>
            <url-pattern>/cron/*</url-pattern>
            <url-pattern>/mapreduce/*</url-pattern>
            <url-pattern>/_ah/mail/*</url-pattern>
            <url-pattern>/appstats/*</url-pattern>
        </web-resource-collection>
        <auth-constraint>
            <role-name>admin</role-name>
        </auth-constraint>
    </security-constraint>
    <servlet-mapping>
        <servlet-name>SensorServlet</servlet-name>
        <url-pattern>/sensor</url-pattern>
    </servlet-mapping>
    <servlet-mapping>
        <servlet-name>ReadingServletMR</servlet-name>
        <url-pattern>/ReadingServletMR</url-pattern>
    </servlet-mapping>
    <servlet-mapping>
        <servlet-name>ForecastServlet</servlet-name>
        <url-pattern>/forecast</url-pattern>
    </servlet-mapping>
    <servlet-mapping>
        <servlet-name>ReadingDataSourceServlet</servlet-name>
        <url-pattern>/ReadingDataSourceServlet</url-pattern>
    </servlet-mapping>
    <servlet-mapping>
        <servlet-name>ArchivedReadingDataSourceServlet</servlet-name>
        <url-pattern>/ArchivedReadingDataSourceServlet</url-pattern>
    </servlet-mapping>
    <servlet-mapping>
        <servlet-name>LCDDisplayServlet</servlet-name>
        <url-pattern>/lcd</url-pattern>
    </servlet-mapping>
    <servlet>
        <servlet-name>mapreduce</servlet-name>
        <servlet-class>com.google.appengine.tools.mapreduce.MapReduceServlet</servlet-class>
    </servlet>
    <servlet-mapping>
        <servlet-name>mapreduce</servlet-name>
        <url-pattern>/mapreduce/*</url-pattern>
    </servlet-mapping>
    <servlet>
        <servlet-name>pipeline</servlet-name>
        <servlet-class>com.google.appengine.tools.pipeline.impl.servlets.PipelineServlet</servlet-class>
    </servlet>
    <servlet-mapping>
        <servlet-name>pipeline</servlet-name>
        <url-pattern>/_ah/pipeline/*</url-pattern>
    </servlet-mapping>
</web-app>
